"use strict";(self.webpackChunkluban_docs=self.webpackChunkluban_docs||[]).push([[9431],{9260:(o,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>a});var r=t(4848),n=t(8453);const i={sidebar_position:3},l="First Workflow",s={id:"getting-started/first-workflow/index",title:"First Workflow",description:'After creating your new project, you are ready to customize and build your first workflow. In this section, we\'ll walk you through building a simple "Hello World" workflow.',source:"@site/docs/4-getting-started/3-first-workflow/index.mdx",sourceDirName:"4-getting-started/3-first-workflow",slug:"/getting-started/first-workflow/",permalink:"/docs/getting-started/first-workflow/",draft:!1,unlisted:!1,editUrl:"https://github.com/tiwater/luban-docs/edit/main/docs/4-getting-started/3-first-workflow/index.mdx",tags:[],version:"current",lastUpdatedBy:"Hugh Lyu",lastUpdatedAt:1719316272e3,sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"New Project",permalink:"/docs/getting-started/new-project/"},next:{title:"Workflow for Robot",permalink:"/docs/getting-started/workflow-for-robot/"}},d={},a=[{value:"Build Workflow",id:"build-workflow",level:2},{value:"Run Workflow",id:"run-workflow",level:2}];function c(o){const e={h1:"h1",h2:"h2",img:"img",p:"p",strong:"strong",...(0,n.R)(),...o.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"first-workflow",children:"First Workflow"}),"\n",(0,r.jsx)(e.p,{children:'After creating your new project, you are ready to customize and build your first workflow. In this section, we\'ll walk you through building a simple "Hello World" workflow.'}),"\n",(0,r.jsx)(e.h2,{id:"build-workflow",children:"Build Workflow"}),"\n",(0,r.jsx)(e.p,{children:"In the blank Workflow Editor, you can start by adding nodes and connecting them to create your workflow. The goal is to make the workflow look like the one shown below:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"Hello World Workflow",src:t(9822).A+"",width:"1342",height:"696"})}),"\n",(0,r.jsx)(e.p,{children:"In this simple workflow, you only need to connect the data ports of the nodes (marked in green). These connections will be enough to drive the workflow since data will flow through these ports from one node to the next."}),"\n",(0,r.jsx)(e.h2,{id:"run-workflow",children:"Run Workflow"}),"\n",(0,r.jsxs)(e.p,{children:["Once you have built your workflow, you can run it within the developer environment. To do this, click the ",(0,r.jsx)(e.strong,{children:"Run"})," button located at the bottom center of the Workflow Editor."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"Run Workflow",src:t(1926).A+"",width:"1366",height:"648"})}),"\n",(0,r.jsx)(e.p,{children:"When the workflow starts running, you will notice a change in the background of the Workflow Editor. Each node will display its status in the top right corner, and the data flow between nodes will be visualized. Hovering your mouse over a data port will show the data flowing through it. Additionally, moving your mouse over the icon of the Preview Text node will let you see the full text received by that node."}),"\n",(0,r.jsx)(e.p,{children:"These visual indicators confirm that your workflow is running successfully."}),"\n",(0,r.jsx)(e.p,{children:'Although this "Hello World" workflow does not perform any practical function, it is a great starting point to help you understand how to build and run workflows in Fourier Builder. You can further customize and expand this workflow by adding more nodes and actions to achieve your desired robot behavior.'})]})}function u(o={}){const{wrapper:e}={...(0,n.R)(),...o.components};return e?(0,r.jsx)(e,{...o,children:(0,r.jsx)(c,{...o})}):c(o)}},9822:(o,e,t)=>{t.d(e,{A:()=>r});const r=t.p+"assets/images/hello-world-c25f1e75ab1b73a6e92743a1f82e9255.png"},1926:(o,e,t)=>{t.d(e,{A:()=>r});const r=t.p+"assets/images/run-workflow-8acc485d2500ea9feb6e9946e6da9ae5.png"},8453:(o,e,t)=>{t.d(e,{R:()=>l,x:()=>s});var r=t(6540);const n={},i=r.createContext(n);function l(o){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function s(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(n):o.components||n:l(o.components),r.createElement(i.Provider,{value:e},o.children)}}}]);