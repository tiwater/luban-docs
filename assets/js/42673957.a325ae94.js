"use strict";(self.webpackChunkluban_docs=self.webpackChunkluban_docs||[]).push([[1216],{4624:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=t(4848),o=t(8453);const i={sidebar_position:99},s="Extensibility",r={id:"workflow/extensibility/index",title:"Extensibility",description:"As mentioned earlier, we can use templates to make the workflow reusable. However, there are cases where we need to create a custom node to perform a specific task. For example, we may need to create a custom node to interact with a specific API, or to perform a specific calculation.",source:"@site/docs/5-workflow/99-extensibility/index.mdx",sourceDirName:"5-workflow/99-extensibility",slug:"/workflow/extensibility/",permalink:"/docs/workflow/extensibility/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:99,frontMatter:{sidebar_position:99},sidebar:"defaultSidebar",previous:{title:"Template",permalink:"/docs/workflow/template/"},next:{title:"AI",permalink:"/docs/category/ai"}},l={},c=[];function d(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"extensibility",children:"Extensibility"}),"\n",(0,a.jsx)(n.p,{children:"As mentioned earlier, we can use templates to make the workflow reusable. However, there are cases where we need to create a custom node to perform a specific task. For example, we may need to create a custom node to interact with a specific API, or to perform a specific calculation."}),"\n",(0,a.jsx)(n.p,{children:"In Fourier Builder, each node is defined with a JSON schema. This schema defines the inputs and outputs of the node, as well as the properties of the node. The schema is used to generate the UI for the node, as well as to validate the inputs and outputs of the node."}),"\n",(0,a.jsx)(n.p,{children:"Let us choose one node and see how it is defined in the JSON schema."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "description": "Set value of a variable",\n  "id": "let",\n  "inputs": [],\n  "name": "Let",\n  "options": [\n    {\n      "description": "Node logic",\n      "id": "evalCode",\n      "invisible": true,\n      "name": "NodeLogic",\n      "readonly": true,\n      "spec": {\n        "defaultValue": "\\n(\\n  async ()=>{\\n\\n\\n\\n// *** User code start ***\\nconst variableName=options.variable;\\nconst variableValue=options.value;\\n\\ncustomVariables[variableName] = variableValue;\\n\\nreturn {\\n  value: variableValue,\\n}\\n// *** User code end ***\\n  }\\n)()\\n",\n        "rows": "3"\n      },\n      "type": "text"\n    },\n    {\n      "description": "Variable Name",\n      "id": "variable",\n      "invisible": false,\n      "name": "Variable Name",\n      "readonly": false,\n      "spec": {\n        "control": "select",\n        "defaultValue": "gpt-4",\n        "optionSource": "chatmodel",\n        "rows": "3"\n      },\n      "type": "text"\n    },\n    {\n      "description": "Variable Value",\n      "id": "value",\n      "invisible": false,\n      "name": "Variable Value",\n      "readonly": false,\n      "spec": {\n        "defaultValue": "",\n        "rows": "3"\n      },\n      "type": "text"\n    }\n  ],\n  "outputs": [\n    {\n      "description": "The value set to the variable",\n      "id": "value",\n      "name": "Variable Value",\n      "spec": {\n        "defaultValue": "",\n        "rows": "3"\n      },\n      "type": "text"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["From the above JSON schema, we can see that the node has three properties: ",(0,a.jsx)(n.code,{children:"Variable Name"}),", ",(0,a.jsx)(n.code,{children:"Variable Value"}),", and ",(0,a.jsx)(n.code,{children:"Node Logic"}),". The ",(0,a.jsx)(n.code,{children:"Variable Name"})," and ",(0,a.jsx)(n.code,{children:"Variable Value"})," properties are used to set the name and value of the variable, while the ",(0,a.jsx)(n.code,{children:"Node Logic"})," property is used to define the logic of the node. Inputs and outputs are defined as well."]}),"\n",(0,a.jsx)(n.p,{children:"The feature to create custom nodes is not yet available in Fourier Builder. However, we are working on it and it will be available soon. Stay tuned for updates!"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var a=t(6540);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);