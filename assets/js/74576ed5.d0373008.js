"use strict";(self.webpackChunkluban_docs=self.webpackChunkluban_docs||[]).push([[7648],{8082:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=n(4848),r=n(8453);const i={sidebar_position:6},s="Service Interoperation",a={id:"workflow/service-interoperation/index",title:"Service Interoperation",description:"Once a workflow has been built and deployed, the Service Interoperation feature enables interaction with that workflow. This functionality allows you to send data to a deployed workflow, receive data from it, trigger its execution, and retrieve its results.",source:"@site/docs/5-workflow/6-service-interoperation/index.mdx",sourceDirName:"5-workflow/6-service-interoperation",slug:"/workflow/service-interoperation/",permalink:"/docs/workflow/service-interoperation/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Events",permalink:"/docs/workflow/event-driven/"},next:{title:"Debugging",permalink:"/docs/workflow/debugging/"}},l={},d=[{value:"Using Service Interoperation",id:"using-service-interoperation",level:2},{value:"Steps for Interoperation:",id:"steps-for-interoperation",level:3},{value:"Interoperating with a Deployed Workflow",id:"interoperating-with-a-deployed-workflow",level:3}];function c(e){const o={h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"service-interoperation",children:"Service Interoperation"}),"\n",(0,t.jsx)(o.p,{children:"Once a workflow has been built and deployed, the Service Interoperation feature enables interaction with that workflow. This functionality allows you to send data to a deployed workflow, receive data from it, trigger its execution, and retrieve its results."}),"\n",(0,t.jsx)(o.h2,{id:"using-service-interoperation",children:"Using Service Interoperation"}),"\n",(0,t.jsxs)(o.p,{children:["All deployed workflows appear in the ",(0,t.jsx)(o.strong,{children:"Subprocess"})," category within the node pane. You can drag and drop these deployed workflow nodes onto the canvas to begin interacting with them."]}),"\n",(0,t.jsx)(o.h3,{id:"steps-for-interoperation",children:"Steps for Interoperation:"}),"\n",(0,t.jsxs)(o.ol,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Deploy Workflow"}),": Ensure that your workflow is built and deployed."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Access in Subprocess"}),": Find the deployed workflow in the ",(0,t.jsx)(o.strong,{children:"Subprocess"})," category in the node pane."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Drag and Drop"}),": Drag the workflow node onto your canvas to integrate it into your current workflow."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Configure Interaction"}),":","\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Exposed Input Variables"}),": For interoperation to be possible, the deployed workflow must have exposed input variables. These are variables the workflow expects as input, and without them, you cannot send data to the workflow."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Properties Pane"}),": When you select the deployed workflow node on the canvas, the properties pane will display the exposed input variables. Configure these variables to enable data exchange and set up triggers."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.h3,{id:"interoperating-with-a-deployed-workflow",children:"Interoperating with a Deployed Workflow"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Sending Data"}),": You can send data to the deployed workflow using the exposed input variables. This flexibility allows you to control and modify the operations of a deployed workflow dynamically."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Receiving Data"}),": Obtain data outputs from the deployed workflow to monitor its performance or to use the results in subsequent steps of your larger workflow."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Triggering Workflow"}),": Initiate the execution of the deployed workflow based on specific events or conditions within your current workflow."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Retrieving Results"}),": Access the execution results of the deployed workflow to validate outcomes or proceed with further processing."]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"By leveraging the Service Interoperation feature, you can effectively manage and integrate various workflows, creating a cohesive and dynamic system. This approach enhances the modularity, reusability, and flexibility of your robotic solutions, enabling sophisticated, interconnected operations."})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);